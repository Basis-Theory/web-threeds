name: Release

on:
  release:
    types: [released]

jobs:
  terraform-prod:
    environment: PROD
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Configure AWS Actions Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::469828239459:role/github-actions-admin-prod
          aws-region: us-east-2

      - name: Configure AWS Terraform Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::469828239459:role/terraform-admin
          aws-region: us-east-2
          role-chaining: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.6

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=prod.tfbackend
        working-directory: terraform/
        continue-on-error: false

      - name: Terraform Apply Prod
        id: plan
        run: terraform apply -auto-approve
        working-directory: terraform/
        continue-on-error: false
        env:
          TF_VAR_env: prod
          TF_VAR_r2_access_key: ${{secrets.TF_R2_ACCESS_KEY}}
          TF_VAR_r2_secret_key: ${{secrets.TF_R2_SECRET_KEY}}

  build-release:
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
      actions: read
    environment: PROD
    strategy:
      matrix:
        node: ["20.x"]
        os: [ubuntu-latest]
    env:
      CI: 1
      HUSKY: 0 # disables husky hooks
    needs:
      - terraform-prod
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_SEMANTIC_RELEASE_PAT }}

      - uses: AnimMouse/setup-rclone@v1

      - name: Configure AWS Actions Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::469828239459:role/github-actions-admin-prod
          aws-region: us-east-2

      - name: Configure AWS Terraform Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::469828239459:role/terraform-admin
          aws-region: us-east-2
          role-chaining: true

      - name: Start Deploy Message
        uses: Basis-Theory/github-actions/deploy-slack-action@master
        with:
          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
          channel: ${{ vars.SLACK_DUCKBOT_RELEASE_CHANNEL_ID }}

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          registry-url: "https://registry.npmjs.org"

      - name: Update npm for Trusted Publishing
        run: npm install -g npm@latest

      - name: Install Deps (with cache)
        uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --immutable --no-progress --ignore-scripts

      - name: Bump Version
        run: make update-version NEW_VERSION=$(echo "${{ github.event.release.tag_name }}" | sed 's/^v//')

      - name: Build
        run: make build
        env:
          SKIP_INSTALL: 1 # install with cache was done already

      - name: Publish Package to NPM
        run: npm publish --access public
        env:
          ENVIRONMENT: prod

      - name: Deploy CDN Bundle to Prod
        run: make upload-bundle
        env:
          CLOUDFLARE: true
          ENVIRONMENT: prod
          GITHUB_TOKEN: ${{ secrets.GH_SEMANTIC_RELEASE_PAT }}
          R2_ACCESS_KEY: ${{secrets.R2_ACCESS_KEY}}
          R2_SECRET_KEY: ${{secrets.R2_SECRET_KEY}}

      - name: Commit Version to Repo
        run: |
          git config --local user.email "platform@basistheory.com"
          git config --local user.name "github-actions[bot]"

          VERSION=$(cat package.json | jq -r '.version')
          git add package.json CHANGELOG.md
          git commit -m "chore(release): $VERSION [skip ci]"
          git push origin HEAD:master

  post-deploy:
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Stop Deploy Message
        if: always()
        uses: Basis-Theory/github-actions/deploy-slack-action@master
        with:
          slack-api-token: ${{ secrets.SLACK_DUCKBOT_API_KEY }}
          channel: ${{ vars.SLACK_DUCKBOT_RELEASE_CHANNEL_ID }}
          status: "done"
