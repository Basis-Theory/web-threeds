name: Verify In Development

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2

      - name: Setup Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.2

      - name: Verify Infrastructure
        run: make setup-infra
        env:
          TF_VAR_ENVIRONMENT: dev
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_GLOBAL_API_KEY }}
          PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
          TF_VAR_DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.OPS_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.OPS_AWS_SECRET_ACCESS_KEY }}

      - name: Generate Release Notes
        id: release_notes
        uses: actions/github-script@v6
        env:
            NEW_RELEASE_TAG: ${{ steps.bump_version.outputs.new_tag }}
        with:
            result-encoding: string
            script: |
              const { NEW_RELEASE_TAG } = process.env;
              const latestRelease = await github.rest.repos.getLatestRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              const releaseNotes = await github.rest.repos.generateReleaseNotes({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: NEW_RELEASE_TAG,
                previous_tag_name: latestRelease.data.tag_name,
              });
              return releaseNotes.data.body;

      - name: Version and Tag
        id: bump_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pre-Release
        uses: softprops/action-gh-release@v1
        with:
            prerelease: true
            generate_release_notes: false
            body: ${{ steps.release_notes.outputs.result }}
            tag_name: ${{ steps.bump_version.outputs.new_tag }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack Deploy Alert
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: ${{ job.status }}
          channel: ${{ secrets.SLACK_RELEASE_CHANNEL_ID }}
          fields: 'repo,commit,message,workflow,job'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}